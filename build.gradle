buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'distribution'

group 'pvt.psk'
version '0.0-SNAPSHOT'

application{
    mainClassName = "pvt.psk.contest.MainKt"
}

repositories
{
    mavenCentral()
    jcenter()
}

//dependencies {
//    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    //compile "io.ktor:ktor-server-netty:$ktor_version"
//    //compile "ch.qos.logback:logback-classic:$logback_version"
//    compile "io.ktor:ktor-network:$ktor_version"
//    //testCompile "io.ktor:ktor-server-tests:$ktor_version"
//}

dependencies
{
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.+')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.+')

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile group: 'io.ktor', name: 'ktor-network', version: '1.1.2'

    //compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.+"
    //compile group: 'io.netty', name: 'netty-all', version: '4.1.33.Final'
    //compile "org.jetbrains.kotlinx:kotlinx-coroutines-nio:0.26.1"
    //compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-io-jvm', version: '0.1.3'
}

sourceSets{
    contest {
        compileClasspath += main.output
        runtimeClasspath += main.output
    }
}

configurations {
    contestCompile { extendsFrom(compile) }
}

test
{
    useJUnitPlatform
    {
        includeEngines 'junit-jupiter' //, 'junit-vintage'
    }
}

compileContestKotlin{
    kotlinOptions.jvmTarget = "1.8"
}

compileKotlin
{
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin
{
    kotlinOptions.jvmTarget = "1.8"
}